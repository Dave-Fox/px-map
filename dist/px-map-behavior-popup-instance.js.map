{"version":3,"sources":["px-map-behavior-popup-instance.es6.js"],"names":["PopupInstance","properties","active","type","Boolean","value","readOnly","parentInstance","Object","notify","bindToControl","String","observers","ready","instance","_createElementInstance","_setElementInstance","attached","_attachToParentInstance","detached","_detachFromParentInstance","popup","_createPopup","L","_updatePopupContent","elementInstance","newContent","_getPopupContent","existingContent","getContent","setContent","fire","content","_bindPopupInstanceEvents","length","getPopup","bindPopup","_unbindPopupInstanceEvents","unbindPopup","_boundPopupEvents","popupopen","_handlePopupOpen","bind","popupclose","_handlePopupClose","click","_handlePopupParentClick","on","off","evt","_map","target","_boundPopupMapEvents","_handlePopupMapClick","control","DomEvent","stop","source","parentElement","_setActive","namespace","window","PxMapBehavior"],"mappings":"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","file":"px-map-behavior-popup-instance.js","sourcesContent":["(function() {\n  'use strict';\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.PopupInstance\n   */\n  const PopupInstance = {\n    properties: {\n      /**\n       * Set to `true` when the popup becomes visible.\n       */\n      active: {\n        type: Boolean,\n        value: false,\n        readOnly: true\n      },\n\n      /**\n       * A reference to the parent instance that this component will bind\n       * itself to when drawn on the map.\n       */\n      parentInstance: {\n        type: Object,\n        notify: true\n      },\n\n      /**\n       * The name of a control or another element on the map that will handle\n       * this popup's content. If this attribute is provided, the popup will\n       * not open as box with a pointer over its parent when the parent is\n       * clicked. The popup will fire an event that should be captured above\n       * with its content to place into a control.\n       */\n      bindToControl: {\n        type: String\n      },\n\n      /**\n       * When the popup is activated and becomes visible, set to `true`.\n       */\n      active: {\n        type: Boolean,\n        value: false,\n        readOnly: true\n      }\n    },\n\n    observers: ['_attachToParentInstance(parentInstance)'],\n\n\n    ready() {\n      // The `_createElementInstance` method should be defined in a component\n      // or behavior that extends this behavior\n      let instance = this._createElementInstance();\n      this._setElementInstance(instance);\n    },\n\n    attached() {\n      this._attachToParentInstance();\n    },\n\n    detached() {\n      this._detachFromParentInstance();\n    },\n\n    _createElementInstance() {\n      const popup = this._createPopup();\n      return popup;\n    },\n\n    // Overwrite this method in the component/behavior that extends this behavior\n    // Just creates a default thing\n    _createPopup() {\n      return L.popup();\n    },\n\n\n    /**\n     * When the popup's DOM is updated, ensure those changes are synced to the\n     * popup instance (which does not directly share this DOM, but just\n     * implements its HTML.)\n     */\n    _updatePopupContent() {\n      if (this.elementInstance && this.active) {\n        const newContent = this._getPopupContent();\n        const existingContent = this.elementInstance.getContent();\n        if (newContent !== existingContent) {\n          this.elementInstance.setContent(newContent);\n          this.fire('px-map-popup-content-changed', {\n            popup: this.elementInstance,\n            content: newContent\n          });\n        }\n      }\n    },\n\n    _attachToParentInstance() {\n      if (!this.parentInstance) return;\n\n      // Capture the `popupopen` and `popupclose` events from the parent instance\n      // These should be torn down on `detached`\n      this._bindPopupInstanceEvents();\n\n      // On parent click, fire an event that will be caught by a named control\n      if (this.bindToControl && this.bindToControl.length) {\n        // this._notifyControlOnClick();\n        return;\n      }\n\n      // On parent click, open a popup hovering over the parent\n      if (this.parentInstance.getPopup() !== this.elementInstance) {\n        this.parentInstance.bindPopup(this.elementInstance);\n      }\n    },\n\n    _detachFromParentInstance() {\n      if (!this.parentInstance) return;\n\n      this._unbindPopupInstanceEvents();\n\n      if (this.parentInstance.getPopup() === this.elementInstance) {\n        this.parentInstance.unbindPopup(this.elementInstance);\n      }\n    },\n\n    _bindPopupInstanceEvents() {\n      if (!this.parentInstance) return;\n\n      this._boundPopupEvents = this._boundPopupEvents || {};\n\n      // Handle popupopen/popupclose events\n      if (!this._boundPopupEvents.popupopen && (typeof this._handlePopupOpen === 'function')) {\n        this._boundPopupEvents.popupopen = this._handlePopupOpen.bind(this);\n      }\n      if (!this._boundPopupEvents.popupclose && (typeof this._handlePopupClose === 'function')) {\n        this._boundPopupEvents.popupclose = this._handlePopupClose.bind(this);\n      }\n\n      // If binding to control, watch parent for click and do own popup handling\n      if (!this._boundPopupEvents.click && this.bindToControl && this.bindToControl.length) {\n        this._boundPopupEvents.click = this._handlePopupParentClick.bind(this);\n      }\n\n      this.parentInstance.on(this._boundPopupEvents);\n    },\n\n    _unbindPopupInstanceEvents() {\n      if (!this.parentInstance) return;\n\n      if (typeof this._boundPopupEvents === 'object') {\n        this.parentInstance.off(this._boundPopupEvents);\n      }\n    },\n\n    _handlePopupParentClick(evt) {\n      if (this.bindToControl && this.bindToControl.length) {\n        // Bind a listener to the map, to close the popup later\n        this._map = evt.target._map;\n        this._boundPopupMapEvents = { click: this._handlePopupMapClick.bind(this) };\n        this._map.on(this._boundPopupMapEvents);\n\n        evt.target.fire('popupopen', { popup: this.elementInstance }, true);\n\n        this.fire('px-map-info-control-bind', {\n          content: this.elementInstance.getContent(),\n          control: this.bindToControl,\n          popup: this\n        });\n\n        L.DomEvent.stop(evt);\n      }\n    },\n\n    _handlePopupMapClick(evt) {\n      if (this.bindToControl && this.bindToControl.length) {\n        this.fire('px-map-info-control-unbind', {\n          control: this.bindToControl,\n          source: this\n        });\n      }\n\n      this.parentElement.fire('popupclose', { popup: this });\n      this._map.off(this._boundPopupMapEvents);\n    },\n\n    _handlePopupOpen() {\n      this._setActive(true);\n      this._updatePopupContent();\n    },\n\n    _handlePopupClose() {\n      this._setActive(false);\n    }\n  };\n\n  const namespace = (window.PxMapBehavior = window.PxMapBehavior || {});\n  namespace.PopupInstance = PopupInstance;\n})()\n"]}