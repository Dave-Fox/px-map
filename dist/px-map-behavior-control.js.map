{"version":3,"sources":["px-map-behavior-control.es6.js"],"names":["namespace","window","PxMapBehavior","ControlImpl","properties","position","type","String","value","observer","addInst","parent","elementInst","addTo","removeInst","remove","Control","Layer","ZoomControlImpl","zoomInText","zoomOutText","createInst","options","L","control","zoom","updateInst","lastOptions","nextOptions","setPosition","getInstOptions","ZoomControl","ScaleControlImpl","imperialUnits","Boolean","metricUnits","reverseColors","PxMap","ScaleControl","setReverseColors","metric","showMetric","imperial","showImperial","LocateControlImpl","locateText","locateTitle","moveToLocation","moveMaxZoom","Number","LocateControl","klass","map","__scaleContainer","DomUtil","addClass","shouldReverse","removeClass","shouldShowImperial","_iScale","create","_update","shouldShowMetric","_mScale","Scale","defaultOptions","className","locateTimeout","composedOptions","Object","assign","Util","setOptions","locateName","__container","__locateButton","_createButton","DomEvent","on","stop","_locationFound","_locationError","disableClickPropagation","locate","_refocusOnMap","off","__locating","_map","setView","maxZoom","moveMaxZoon","timeout","_setLocatingState","_setReadyState","__disabled","html","title","container","clickFn","buttonEl","innerHTML","href","setAttribute","evt","_setErrorState","fire","_updateDisabled","locateErrorText"],"mappings":"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","file":"px-map-behavior-control.js","sourcesContent":["(function() {\n  'use strict';\n\n  /****************************************************************************\n   * BEHAVIORS\n   ****************************************************************************/\n\n  /* Ensures the behavior namespace is created */\n  const namespace = (window.PxMapBehavior = window.PxMapBehavior || {});\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.Control\n   */\n  const ControlImpl = {\n    properties: {\n      /**\n       * Positions the control in one of the map corners. Choose from 'topright',\n       * 'topleft', 'bottomright', or 'bottomleft'.\n       *\n       * @type {String}\n       */\n      position: {\n        type: String,\n        value: 'bottomright',\n        observer: 'shouldUpdateInst'\n      }\n    },\n\n    addInst(parent) {\n      this.elementInst.addTo(parent);\n    },\n\n    removeInst(parent) {\n      this.elementInst.remove();\n    }\n  };\n  /* Bind Control behavior */\n  namespace.Control = [\n    namespace.Layer,\n    ControlImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.ZoomControl\n   */\n  const ZoomControlImpl = {\n    properties: {\n      /**\n       * Sets the icon for zoom in button\n       * This is not dynamic and can only be set at run time\n       *\n       * @type {String}\n       */\n      zoomInText: {\n        type: String,\n        value: '<i class=\"fa fa-plus\"></i>',\n      },\n\n      /**\n       * Sets the icon for zoom out button\n       * This is not dynamic and can only be set at run time\n       *\n       * @type {String}\n       */\n      zoomOutText: {\n        type: String,\n        value: '<i class=\"fa fa-minus\"></i>',\n      }\n    },\n\n    createInst(options) {\n      // return new PxMap.ZoomControl(options);\n      return L.control.zoom(options);\n    },\n\n    updateInst(lastOptions, nextOptions) {\n      if (lastOptions.position !== nextOptions.position) {\n        this.elementInst.setPosition(nextOptions.position);\n      }\n    },\n\n    getInstOptions() {\n      return {\n        position: this.position,\n        zoomInText: this.zoomInText,\n        zoomOutText: this.zoomOutText\n      };\n    }\n  };\n  /* Bind ZoomControl behavior */\n  namespace.ZoomControl = [\n    namespace.Control,\n    ZoomControlImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.ScaleControl\n   */\n  const ScaleControlImpl = {\n    properties: {\n      /**\n       * Shows a imperial unit scale (ft/mi) line if enabled. Multiple unit scales\n       * can be enabled to show multiple scales. If no units are enabled,\n       * the scale cannot be drawn.\n       *\n       * @type {Boolean}\n       */\n      imperialUnits: {\n        type: Boolean,\n        value: false,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * Shows a metric unit scale (m/km) line if enabled. Multiple unit scales\n       * can be enabled to show multiple scales. If no units are enabled,\n       * the scale cannot be drawn.\n       *\n       * @type {Boolean}\n       */\n      metricUnits: {\n        type: Boolean,\n        value: false,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * Enable to reverse the the scale's colors, making it easier to read\n       * against a dark tile layer.\n       *\n       * @type {Boolean}\n       */\n      reverseColors: {\n        type: Boolean,\n        value: false,\n        observer: 'shouldUpdateInst'\n      }\n    },\n\n    createInst(options) {\n      return new PxMap.ScaleControl(options);\n    },\n\n    updateInst(lastOptions, nextOptions) {\n      if (lastOptions.position !== nextOptions.position) {\n        this.elementInst.setPosition(nextOptions.position);\n      }\n      if (lastOptions.reverseColors !== nextOptions.reverseColors) {\n        this.elementInst.setReverseColors(nextOptions.reverseColors);\n      }\n      if (lastOptions.metric !== nextOptions.metric) {\n        this.elementInst.showMetric(nextOptions.metric);\n      }\n      if (lastOptions.imperial !== nextOptions.imperial) {\n        this.elementInst.showImperial(nextOptions.imperial);\n      }\n    },\n\n    getInstOptions() {\n      return {\n        imperial: this.imperialUnits,\n        metric: this.metricUnits,\n        reverseColors: this.reverseColors,\n        position: this.position\n      };\n    }\n  };\n  /* Bind ScaleControl behavior */\n  namespace.ScaleControl = [\n    namespace.Control,\n    ScaleControlImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.LocateControl\n   */\n  const LocateControlImpl = {\n    properties: {\n      /**\n       * A string of HTML that will be used as the locate button text.\n       *\n       * @type {String}\n       */\n      locateText: {\n        type: String,\n        value: '<i class=\"fa fa-crosshairs\"></i>',\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * A title for the locate text button. Will be used to inform users with\n       * screen reading devices what the button does.\n       *\n       * @type {String}\n       */\n      locateTitle: {\n        type: String,\n        value: 'Zoom to your location',\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * If enabled, the map will set its view center to the user's current\n       * location after a successful locate browser API call.\n       *\n       * @type {Boolean}\n       */\n      moveToLocation: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * The maximum zoom level to set when the map moves to the user's location.\n       * The `moveToLocation` attribute must be set for the map to move to\n       * after a location event.\n       *\n       * @type {Number}\n       */\n      moveMaxZoom: {\n        type: Number\n      }\n    },\n\n    createInst(options) {\n      return new PxMap.LocateControl(options);\n    },\n\n    updateInst(lastOptions, nextOptions) {\n      if (lastOptions.position !== nextOptions.position) {\n        this.elementInst.setPosition(nextOptions.position);\n      }\n    },\n\n    getInstOptions() {\n      return {\n        position: this.position,\n        locateText: this.locateText,\n        locateTitle: this.locateTitle,\n        moveToLocation: this.moveToLocation,\n        moveMaxZoom: this.moveMaxZoom\n      };\n    }\n  };\n  /* Bind LocateControl behavior */\n  namespace.LocateControl = [\n    namespace.Control,\n    LocateControlImpl\n  ];\n\n  /****************************************************************************\n   * KLASSES\n   ****************************************************************************/\n\n  /* Ensures the klass namespace is created */\n  const klass = (window.PxMap = window.PxMap || {});\n\n  /**\n   *\n   * @class PxMap.ScaleControl\n   */\n  class ScaleControl extends L.Control.Scale {\n    initialize(options) {\n      super.initialize(options);\n    }\n\n    onAdd(map) {\n      // Call default `onAdd` for scale to get the container\n      this.__scaleContainer = super.onAdd(map);\n\n      // Determine if we should add the reverse modifier CSS class\n      if (this.options.reverseColors === true) {\n        L.DomUtil.addClass(this.__scaleContainer, 'leaflet-control-scale--reverse');\n      }\n\n      return this.__scaleContainer;\n    }\n\n    onRemove(map) {\n      super.onRemove(map);\n\n      // Clean up scaleContainer reference\n      this.__scaleContainer = null;\n    }\n\n    /**\n     * Updates the `reverseColors` setting for the scale control. If the\n     * `shouldReverse` param doesn't match the current classes on the\n     * scale, updates the scale with the necessary classes.\n     *\n     * @param {Boolean} shouldReverse - If `true`, scale should be reversed. If `false`, it should not be.\n     */\n    setReverseColors(shouldReverse) {\n      if (!this.__scaleContainer) return;\n\n      if (shouldReverse && !this.options.reverseColors) {\n        this.options.reverseColors = true;\n        L.DomUtil.addClass(this.__scaleContainer, 'leaflet-control-scale--reverse');\n      }\n\n      if (!shouldReverse && this.options.reverseColors) {\n        this.options.reverseColors = false;\n        L.DomUtil.removeClass(this.__scaleContainer, 'leaflet-control-scale--reverse');\n      }\n    }\n\n    /**\n     * Shows or hides the imperial unit scale.\n     *\n     * @param {Boolean} shouldShowImperial - If `true`, ensures imperial unit scale is visible.\n     */\n    showImperial(shouldShowImperial) {\n      if (!this.__scaleContainer) return;\n\n      // No imperial scale exists, create one\n      if (shouldShowImperial && !this.options.imperial && !this._iScale) {\n        this._iScale = L.DomUtil.create('div', 'leaflet-control-scale-line', this.__scaleContainer);\n        this.options.imperial = true;\n      }\n\n      // We should remove the existing imperial scale\n      if (!shouldShowImperial && this.options.imperial && this._iScale) {\n        this.options.imperial = false;\n        L.DomUtil.remove(this._iScale);\n        this._iScale = null;\n      }\n\n      // Update the scale\n      this._update();\n    }\n\n    /**\n     * Shows or hides the metric unit scale.\n     *\n     * @param {Boolean} shouldShowMetric - If `true`, ensures metric unit scale is visible.\n     */\n    showMetric(shouldShowMetric) {\n      if (!this.__scaleContainer) return;\n\n      // No metric scale exists, create one\n      if (shouldShowMetric && !this.options.metric && !this._mScale) {\n        this._mScale =  L.DomUtil.create('div', 'leaflet-control-scale-line', this.__scaleContainer);\n        this.options.metric = true;\n      }\n\n      // We should remove the existing metric scale\n      if (!shouldShowMetric && this.options.metric && this._mScale) {\n        this.options.metric = false;\n        L.DomUtil.remove(this._mScale);\n        this._mScale = null;\n      }\n\n      // Update the scale\n      this._update();\n    }\n\n  };\n  /* Bind ScaleControl klass */\n  klass.ScaleControl = ScaleControl;\n\n  /**\n   *\n   * @class PxMap.LocateControl\n   */\n  class LocateControl extends L.Control {\n    initialize(options={}) {\n      const defaultOptions = {\n        position: 'bottomright',\n        className: '',\n        locateText: '<i class=\"fa fa-crosshairs\"></i>',\n        locateTitle: 'Zoom to your location',\n        locateTimeout: 10000,\n        moveToLocation: true,\n        moveMaxZoom: null\n      };\n      const composedOptions = Object.assign(defaultOptions, options);\n      L.Util.setOptions(this, composedOptions);\n    }\n\n    onAdd(map) {\n      const locateName = 'leaflet-control-locate';\n      this.__container = L.DomUtil.create('div', `${locateName} leaflet-bar ${this.options.className}`);\n      this.__locateButton = this._createButton(this.options.locateText, this.options.locateTitle, 'leaflet-control-locate-button', this.__container);\n\n      /* Bind map events */\n      L.DomEvent.on(map, 'locationfound', L.DomEvent.stop);\n      L.DomEvent.on(map, 'locationfound', this._locationFound, this);\n      // map.on('locationfound', this._locationFound, this);\n      L.DomEvent.on(map, 'locationerror', L.DomEvent.stop);\n      L.DomEvent.on(map, 'locationerror', this._locationError, this);\n      // map.on('locationerror', this._locationError, this);\n\n      /* Bind button events */\n      L.DomEvent.disableClickPropagation(this.__locateButton);\n      L.DomEvent.on(this.__locateButton, 'click', L.DomEvent.stop);\n      L.DomEvent.on(this.__locateButton, 'click', this.locate, this);\n      L.DomEvent.on(this.__locateButton, 'click', this._refocusOnMap, this);\n\n      return this.__container;\n    }\n\n    onRemove(map) {\n      /* Unbind map events */\n      map.off('locationfound', this._locationFound, this);\n      map.off('locationerror', this._locationError, this);\n\n      /* Unbind button events */\n      L.DomEvent.off(this.__locateButton, 'click', L.DomEvent.stop);\n      L.DomEvent.off(this.__locateButton, 'click', this.locate, this);\n      L.DomEvent.off(this.__locateButton, 'click', this._refocusOnMap, this);\n    }\n\n    locate() {\n      this.__locating = true;\n      this._map.locate({\n        setView: this.options.moveToLocation,\n        maxZoom: this.options.moveMaxZoon,\n        timeout: this.options.locateTimeout\n      });\n      this._setLocatingState();\n    }\n\n    reset() {\n      this._setReadyState();\n    }\n\n    isDisabled() {\n      return this.__disabled || false;\n    }\n\n    _createButton(html, title, className, container, clickFn) {\n      const buttonEl = L.DomUtil.create('a', className, container);\n      buttonEl.innerHTML = html;\n      buttonEl.href = '#';\n      buttonEl.title = title;\n\n      // Tells screen readers to treat this as a button and read its title\n      buttonEl.setAttribute('role', 'button');\n      buttonEl.setAttribute('aria-label', title);\n\n      return buttonEl;\n    }\n\n    _locationFound(evt) {\n      if (this.__locating) {\n        this.__locating = false;\n        this._setReadyState();\n      }\n    }\n\n    _locationError(evt) {\n      if (this.__locating) {\n        this.__locating = false;\n        this._setErrorState();\n        this.fire('px-map-locating-error');\n      }\n    }\n\n    _setLocatingState() {\n      if (!this.__locateButton || !this.__locating) return;\n\n      L.DomUtil.addClass(this.__locateButton, 'leaflet-control-locate-button--locating');\n\n      this.__disabled = true;\n      this._updateDisabled();\n    }\n\n    _setReadyState() {\n      if (!this.__locateButton || this.__locating) return;\n\n      this.__locateButton.innerHTML = this.options.locateText;\n      L.DomUtil.removeClass(this.__locateButton, 'leaflet-control-locate-button--locating');\n      L.DomUtil.removeClass(this.__locateButton, 'leaflet-control-locate-button--error');\n\n      this.__disabled = false;\n      this._updateDisabled();\n    }\n\n    _setErrorState() {\n      if (!this.__locateButton || this.__locating) return;\n\n      this.__locateButton.innerHTML = this.options.locateErrorText;\n\n      this.__disabled = true;\n      this._updateDisabled();\n    }\n\n    _updateDisabled() {\n      if (!this.__locateButton) return;\n\n      if (this.__disabled) {\n        L.DomUtil.addClass(this.__locateButton, 'leaflet-control-locate-button--disabled');\n      }\n      if (!this.__disabled) {\n        L.DomUtil.removeClass(this.__locateButton, 'leaflet-control-locate-button--disabled');\n      }\n    }\n  };\n  /* Bind LocateControl klass */\n  klass.LocateControl = LocateControl;\n\n})();\n"]}