{"version":3,"sources":["px-map-info-popup.es6.js"],"names":["PxMapInfoPopup","options","_getPopupOptions","className","content","_getPopupContent","L","popup","setContent","defaults","Polymer","dom","root","innerHTML","trim","ns","window","PxMapBehavior","ElementInstance","PopupInstance","title","type","String","observer","description","imgSrc"],"mappings":"wpBAAA,CAAC,UAAU,CACT,aADS,GAGHA,eAHG,yJA8DQ,CACb,GAAMC,SAAU,KAAKC,gBAAL,CAAsB,CAAEC,UAAW,gBAAb,CAAtB,CAAhB,CACA,GAAMC,SAAU,KAAKC,gBAAL,EAAhB,CACA,MAAOC,GAAEC,KAAF,CAAQN,OAAR,EAAiBO,UAAjB,CAA4BJ,OAA5B,CACR,CAlEM,2DAoEuB,IAAbK,SAAa,2DAAJ,EAAI,CAC5B,GAAMR,SAAUQ,QAAhB,CACA,MAAOR,QACR,CAvEM,2DA+EY,CACjB,MAAOS,SAAQC,GAAR,CAAY,KAAKC,IAAjB,EAAuBC,SAAvB,CAAiCC,IAAjC,EACR,CAjFM,8BAKE,CACP,MAAO,mBACR,CAPM,qCAUS,CACd,GAAMC,IAAKC,OAAOC,aAAlB,CACA,MAAO,CACLF,GAAGG,eADE,CAELH,GAAGI,aAFE,CAIR,CAhBM,sCAmBU,CACf,MAAO,CAQLC,MAAO,CACLC,KAAMC,MADD,CAELC,SAAU,qBAFL,CARF,CAwBLC,YAAa,CACXH,KAAMC,MADK,CAEXC,SAAU,qBAFC,CAxBR,CAmCLE,OAAQ,CACNJ,KAAMC,MADA,CAENC,SAAU,qBAFJ,CAnCH,CAwCR,CA5DM,6BAqFTb,QAAQV,cAAR,CACD,CAtFD","file":"px-map-info-popup.js","sourcesContent":["(function(){\n  'use strict';\n\n  class PxMapInfoPopup {\n    /* Name for the component */\n    get is() {\n      return 'px-map-info-popup';\n    }\n\n    /* Behaviors to import for this component */\n    get behaviors() {\n      const ns = window.PxMapBehavior;\n      return [\n        ns.ElementInstance,\n        ns.PopupInstance\n      ];\n    }\n\n    /* Properties for this component */\n    get properties() {\n      return {\n        /**\n         * Title text to display in bold at the top of the popup. Should be kept\n         * relatively short (25 characters or less) to keep the popup from\n         * growing too large.\n         *\n         * @type {String}\n         */\n        title: {\n          type: String,\n          observer: '_updatePopupContent'\n        },\n\n        /**\n         * Description text to place in the body of the popup. Try to keep the\n         * description to a reasonable size to keep the popup from growing\n         * too large.\n         *\n         * To display more information, bind to the popup's\n         * `active` property for notifications on when this popup is shown\n         * and display additional information in the UI of your app.\n         *\n         * @type {String}\n         */\n        description: {\n          type: String,\n          observer: '_updatePopupContent'\n        },\n\n        /**\n         * The URL for an image to place inside the popup. Use a small, square\n         * thumbnail-style image (e.g. 75px by 75px).\n         *\n         * @type {String}\n         */\n        imgSrc: {\n          type: String,\n          observer: '_updatePopupContent'\n        }\n      }\n    }\n\n    _createPopup() {\n      const options = this._getPopupOptions({ className: 'map-info-popup' });\n      const content = this._getPopupContent();\n      return L.popup(options).setContent(content);\n    }\n\n    _getPopupOptions(defaults={}) {\n      const options = defaults;\n      return options;\n    }\n\n    /**\n     * Retrieves popup content from the light DOM and cleans it up preparing\n     * for insertion into the popup instnace.\n     *\n     * @return {String} Stringified HTML\n     */\n    _getPopupContent() {\n      return Polymer.dom(this.root).innerHTML.trim();\n    }\n  }\n\n  /* Register this component with the Polymer constructor. */\n  Polymer(PxMapInfoPopup);\n})();\n"]}