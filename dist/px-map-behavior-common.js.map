{"version":3,"sources":["px-map-behavior-common.es6.js"],"names":["Common","LatLng","properties","LayerParent","created","_attachedChildren","WeakMap","detached","_detachLayerChildren","listeners","_tryToAddAllChildren","evt","elementInst","srcElement","_attachLayerChildren","_tryToAddOneChild","stopPropagation","_attachLayerChild","children","getEffectiveChildren","length","child","childEl","has","addInst","canAddInst","set","async","_detachLayerChild","removeInst","delete","LayerChild","StaticIconMethods","createStaticIcon","options","L","divIcon","getStaticIconOptions","settings","defaults","type","badge","className","getStaticIconClasses","html","iconSize","point","iconAnchor","popupAnchor","Object","assign","classes","push","join","namespace","window","PxMapBehavior"],"mappings":"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","file":"px-map-behavior-common.js","sourcesContent":["(function() {\n  'use strict';\n\n  const Common = {};\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.Common.LatLng\n   */\n  Common.LatLng = {\n    properties: {}\n  };\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.Common.LayerParent\n   */\n  Common.LayerParent = {\n    created() {\n      // Use a WeakMap to keep track of our attached children\n      this._attachedChildren = this._attachedChildren || new WeakMap();\n    },\n\n    detached() {\n      this._detachLayerChildren();\n    },\n\n    listeners: {\n      'px-map-layer-instance-created' : '_tryToAddAllChildren',\n      'px-map-layer-ready-to-add' : '_tryToAddOneChild'\n    },\n\n    // Handles attaching children throughout this element's lifecycle\n\n    _tryToAddAllChildren(evt) {\n      // If this element's elementInst isn't ready, halt and wait until later\n      // If this event isn't coming from this element, do not handle\n      if (!this.elementInst || evt.srcElement !== this) return;\n\n      // If my own elementInst was just created, loop over children and try to attach them\n      this._attachLayerChildren();\n    },\n\n    _tryToAddOneChild(evt) {\n      // If the added-to-dom event belongs to this element, just return and let it bubble\n      if (evt.srcElement === this) return;\n\n      // This element is the parent, so stop this event from bubbling\n      evt.stopPropagation();\n\n      // If I have no elementInst, halt and wait until later\n      if (!this.elementInst) return;\n\n      this._attachLayerChild(evt.srcElement);\n    },\n\n    _attachLayerChildren() {\n      const children = this.getEffectiveChildren();\n      if (!children || !children.length) return;\n\n      for (let child of children) {\n        this._attachLayerChild(child);\n      }\n    },\n\n    _attachLayerChild(childEl) {\n      if (this._attachedChildren.has(childEl) || !childEl.addInst || !childEl.canAddInst || !childEl.canAddInst()) return;\n      this._attachedChildren.set(childEl, true);\n\n      this.async(() => { childEl.addInst(this.elementInst); });\n    },\n\n    // Handles detaching children throughout this element's lifecycle\n\n    _detachLayerChildren() {\n      const children = this.getEffectiveChildren();\n      if (!children || !children.length) return;\n\n      for (let child of children) {\n        this._detachLayerChild(child);\n      }\n    },\n\n    _detachLayerChild(childEl) {\n      if (!this._attachedChildren.has(childEl) || !childEl.removeInst) return;\n      this._attachedChildren.delete(childEl);\n\n      this.async(() => { childEl.removeInst(this.elementInst); });\n    }\n  };\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.Common.LayerChild\n   */\n  Common.LayerChild = {\n    properties: {}\n  };\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.Common.StaticIconMethods\n   */\n  Common.StaticIconMethods = {\n    createStaticIcon(options) {\n      return L.divIcon(options);\n    },\n\n    getStaticIconOptions(settings={}, defaults={}) {\n      const options = {};\n\n      // Dynamic options\n      let { type='info', badge=false } = settings;\n      options.className = this.getStaticIconClasses(type, badge);\n\n      // Static options\n      options.html = `\n        <i class=\"map-icon-static__body\"></i>\n        <i class=\"map-icon-static__descender\"></i>\n        <i class=\"map-icon-static__badge\"></i>\n      `;\n      options.iconSize = L.point(50,50);\n      options.iconAnchor = L.point(9.01, 39.5);\n      options.popupAnchor = L.point(1,-38);\n\n      // Overwrite the `options`we built with defaults and return\n      Object.assign(options, defaults);\n      return options;\n    },\n\n    getStaticIconClasses(type, badge) {\n      const classes = ['map-icon', 'map-icon-static'];\n\n      if (type && type.length) {\n        classes.push(`map-icon-static--${type}`);\n      }\n\n      if (badge) {\n        classes.push(`map-icon-static--with-badge`);\n      }\n\n      return classes.join(' ');\n    }\n  };\n\n  const namespace = (window.PxMapBehavior = window.PxMapBehavior || {});\n  namespace.Common = namespace.Common || Common;\n})()\n"]}