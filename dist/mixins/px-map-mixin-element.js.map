{"version":3,"sources":["mixins/px-map-mixin-element.es6.js"],"names":["MapElementMixin","superclass","options","elementInst","parent","__initialOptions","getInstOptions","createInst","hasLayer","bindInstToParent","unbindInstFromParent","undefined","__elAttached","canAddInst","notifyInstReady","lastOptions","__lastOptions","nextOptions","getOptions","updateInst","Error","source","properties","Object","length","assign","extend","mixins","window","PxMapMixin","MapElement","mixwith","mix","with","klasses","PxMap"],"mappings":"8tDAAA,CAAC,UAAW,CACV,aAOA,GAAIA,iBAAkB,QAAlBA,gBAAkB,CAACC,UAAD,6RACTC,OADS,CACA,CAClB,+FAAsB,sGAAiBA,OAAjB,EAWtB,KAAKC,WAAL,CAAmB,IACpB,CAdmB,wCAgBZC,MAhBY,CAgBJ,CAEd,GAAI,CAAC,KAAKD,WAAV,CAAuB,CACrB,GAAMD,SAAU,KAAKG,gBAAL,CAAwB,KAAKC,cAAL,EAAxC,CACA,KAAKH,WAAL,CAAmB,KAAKI,UAAL,CAAgBL,OAAhB,CACpB,CAGD,GAAI,KAAKC,WAAL,EAAoBC,MAApB,EAA8B,CAACA,OAAOI,QAAP,CAAgB,KAAKL,WAArB,CAAnC,CAAsE,CACpE,KAAKM,gBAAL,CAAsBL,MAAtB,CACD,EAGF,CA7BmB,8CA+BTA,MA/BS,CA+BD,CACjB,GAAI,KAAKD,WAAT,CAAsB,CACpB,KAAKO,oBAAL,CAA0BN,OAASA,MAAT,CAAkBO,SAA5C,CACD,EAGF,CArCmB,2DA0CD,CACjB,GAAI,CAAC,KAAKR,WAAN,EAAqB,KAAKS,YAA1B,EAA0C,KAAKC,UAAL,EAA9C,CAAiE,CAC/D,KAAKC,eAAL,CAAqB,KAAKD,UAAL,EAArB,CACD,CACD,GAAI,CAAC,KAAKV,WAAV,CAAuB,OAEvB,GAAMY,aAAc,KAAKC,aAAL,EAAsB,KAAKX,gBAA/C,CACA,GAAMY,aAAc,KAAKC,UAAL,EAApB,CAEA,KAAKC,UAAL,CAAgBJ,WAAhB,CAA6BE,WAA7B,EAIA,KAAKD,aAAL,CAAqBC,WACtB,CAxDmB,+CA4DP,CACX,KAAM,IAAIG,MAAJ,CAAU,8CAAV,CACP,CA9DmB,+CAgEP,CACX,KAAM,IAAIA,MAAJ,CAAU,8CAAV,CACP,CAlEmB,uDAoEH,CACf,KAAM,IAAIA,MAAJ,CAAU,8CAAV,CACP,CAtEmB,2CAwET,CACT,KAAM,IAAIA,MAAJ,CAAU,4CAAV,CACP,CA1EmB,+CA4EP,CACX,KAAM,IAAIA,MAAJ,CAAU,8CAAV,CACP,CA9EmB,sCAkFbC,MAlFa,CAkFU,+BAAZC,UAAY,iDAAZA,UAAY,yBAC5B,GAAID,QAAWA,iBAAkBE,OAA7B,EAAwCD,WAAWE,MAAvD,CAA+D,CAC7DD,OAAOE,MAAP,eAAcJ,MAAd,SAAyBC,UAAzB,EACD,CACD,MAAOD,OACR,CAvFmB,qDAyFS,CAC3B,KAAKC,UAAL,CAAkB,KAAKA,UAAL,EAAmB,EAArC,CAD2B,+BAAZA,UAAY,2CAAZA,UAAY,yBAE3B,GAAIA,WAAWE,MAAf,CAAuB,CACrB,KAAKE,MAAL,aAAY,KAAKJ,UAAjB,SAAgCA,UAAhC,EACD,CACD,MAAO,MAAKA,UACb,CA/FmB,mBAA8BrB,UAA9B,EAAtB,CAkGA,GAAM0B,QAAUC,OAAOC,UAAP,CAAoBD,OAAOC,UAAP,EAAqB,EAAzD,CACAF,OAAOG,UAAP,CAAoB9B,eAApB,CA3GU,GA6GJ8B,WA7GI,uQA6GeC,QAAQC,GAAR,GAAcC,IAAd,CAAmBJ,WAAWC,UAA9B,CA7Gf,EA6G2D,CAErE,GAAMI,SAAWN,OAAOO,KAAP,CAAeP,OAAOO,KAAP,EAAgB,EAAhD,CACAD,QAAQJ,UAAR,CAAqBA,UACtB,CAjHD","file":"px-map-mixin-element.js","sourcesContent":["(function() {\n  'use strict';\n\n  /**\n   *\n   *\n   * @mixin MapElementMixin\n   */\n  let MapElementMixin = (superclass) => class extends superclass {\n    initialize(options) {\n      if (super.initialize) super.initialize(options);\n\n      /**\n       * A reference to this element's instance. The instance can be configured and\n       * attached to the map or to another instance. Events emitted by this instance\n       * will be intercepted and retargeted so they appear to come from directly from\n       * this custom element.\n       *\n       * @property elementInst\n       * @type {Object|null}\n       */\n      this.elementInst = null;\n    }\n\n    addInst(parent) {\n      // Create the instance, if it doesn't already exist\n      if (!this.elementInst) {\n        const options = this.__initialOptions = this.getInstOptions();\n        this.elementInst = this.createInst(options);\n      }\n\n      // Add the instance to its parent\n      if (this.elementInst && parent || !parent.hasLayer(this.elementInst)) {\n        this.bindInstToParent(parent);\n      };\n\n      // @TODO: Bind events\n    }\n\n    removeInst(parent) {\n      if (this.elementInst) {\n        this.unbindInstFromParent(parent ? parent : undefined);\n      };\n\n      // @TODO: Unbind events\n    }\n\n    // Simple observer trigger for dynamic properties that should be synced\n    // to the instance\n\n    shouldUpdateInst() {\n      if (!this.elementInst && this.__elAttached && this.canAddInst()) {\n        this.notifyInstReady(this.canAddInst());\n      }\n      if (!this.elementInst) return;\n\n      const lastOptions = this.__lastOptions || this.__initialOptions;\n      const nextOptions = this.getOptions();\n\n      this.updateInst(lastOptions, nextOptions);\n\n      // Set `lastOptions` to `nextOptions` so the next time this method is called\n      // it will have access to the last options\n      this.__lastOptions = nextOptions;\n    }\n\n    // Should be implemented by behaviors/components that extend LayerBase\n\n    createInst() {\n      throw new Error('The `createInst` method must be implemented.')\n    }\n\n    updateInst() {\n      throw new Error('The `updateInst` method must be implemented.')\n    }\n\n    getInstOptions() {\n      throw new Error('The `getOptions` method must be implemented.')\n    }\n\n    bindInst() {\n      throw new Error('The `bindInst` method must be implemented.')\n    }\n\n    unbindInst() {\n      throw new Error('The `unbindInst` method must be implemented.')\n    }\n\n    // Helper methods\n\n    extend(source, ...properties) {\n      if (source && (source instanceof Object) && properties.length) {\n        Object.assign(source, ...properties);\n      }\n      return source;\n    }\n\n    addProperties(...properties) {\n      this.properties = this.properties || {};\n      if (properties.length) {\n        this.extend(this.properties, ...properties)\n      }\n      return this.properties;\n    }\n  };\n\n  const mixins = (window.PxMapMixin = window.PxMapMixin || {});\n  mixins.MapElement = MapElementMixin;\n\n  class MapElement extends mixwith.mix().with(PxMapMixin.MapElement) {};\n\n  const klasses = (window.PxMap = window.PxMap || {});\n  klasses.MapElement = MapElement;\n})();\n"]}