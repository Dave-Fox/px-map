{"version":3,"sources":["mixins/px-map-mixin-marker.es6.js"],"names":["MapMarkerMixin","superclass","options","lat","undefined","lng","name","L","marker","geometry","config","lastOptions","nextOptions","elementInst","setLatLng","icon","setIcon","getLatLng","title","getIcon","latLng","Error","mixins","window","PxMapMixin","MapMarker","arguments","initialize","mixwith","mix","PxMap","Base","with","MapElement","MapLayer","klasses"],"mappings":"8tDAAA,CAAC,UAAW,CACV,aAOA,GAAIA,gBAAiB,QAAjBA,eAAiB,CAACC,UAAD,8RACI,IAAZC,QAAY,2DAAJ,EAAI,CACrB,+FAAsB,sGAAiBA,OAAjB,EAEtB,KAAKC,GAAL,CAAWD,QAAQC,GAAR,EAAeC,SAA1B,CACA,KAAKC,GAAL,CAAWH,QAAQG,GAAR,EAAeD,SAA1B,CACA,KAAKE,IAAL,CAAYJ,QAAQI,IAAR,EAAgBF,SAC7B,CAPkB,+CASN,CACX,MAAQ,OAAO,MAAKD,GAAZ,GAAoB,QAArB,EAAmC,MAAO,MAAKE,GAAZ,GAAoB,QAC/D,CAXkB,8CAaRH,OAbQ,CAaC,CAClB,MAAOK,GAAEC,MAAF,CAASN,QAAQO,QAAjB,CAA2BP,QAAQQ,MAAnC,CACR,CAfkB,8CAiBRC,WAjBQ,CAiBKC,WAjBL,CAiBkB,CACnC,GAAID,YAAYF,QAAZ,GAAyBG,YAAYH,QAAzC,CAAmD,CACjD,KAAKI,WAAL,CAAiBC,SAAjB,CAA2BF,YAAYH,QAAvC,CACD,CACD,GAAIE,YAAYD,MAAZ,CAAmBK,IAAnB,GAA4BH,YAAYF,MAAZ,CAAmBK,IAAnD,CAAyD,CACvD,KAAKF,WAAL,CAAiBG,OAAjB,CAAyBJ,YAAYF,MAAZ,CAAmBK,IAA5C,CACD,CACF,CAxBkB,+CA0BN,CACX,GAAMN,UAAW,KAAKQ,SAAL,EAAjB,CAEA,GAAMP,QAAS,EAAf,CACAA,OAAOQ,KAAP,CAAgB,KAAKZ,IAAL,EAAa,EAA7B,CACAI,OAAOK,IAAP,CAAc,KAAKI,OAAL,EAAd,CAEA,MAAO,CAAEV,iBAAF,CAAYC,aAAZ,CACR,CAlCkB,6CAoCP,CACV,GAAI,CAAC,KAAKP,GAAN,EAAa,CAAC,KAAKE,GAAvB,CAA4B,MAAO,EAAP,CAC5B,MAAOE,GAAEa,MAAF,CAAS,KAAKjB,GAAd,CAAmB,KAAKE,GAAxB,CACR,CAvCkB,yCA2CT,CACR,KAAM,IAAIgB,MAAJ,CAAU,2CAAV,CACP,CA7CkB,mBAA8BpB,UAA9B,EAArB,CAgDA,GAAMqB,QAAUC,OAAOC,UAAP,CAAoBD,OAAOC,UAAP,EAAqB,EAAzD,CACAF,OAAOG,SAAP,CAAmBzB,cAAnB,CAzDU,GA2DJyB,UA3DI,oEA4DR,oBAAc,+IACHC,SADG,GAEZ,OAAKC,UAAL,GAFY,aAGb,CA/DO,kBA2DcC,QAAQC,GAAR,CAAYC,MAAMC,IAAlB,EAAwBC,IAAxB,CAA6BR,WAAWS,UAAxC,CAAoDT,WAAWU,QAA/D,CAAyEV,WAAWC,SAApF,CA3Dd,EAkEV,GAAMU,SAAWZ,OAAOO,KAAP,CAAeP,OAAOO,KAAP,EAAgB,EAAhD,CACAK,QAAQV,SAAR,CAAoBA,SACrB,CApED","file":"px-map-mixin-marker.js","sourcesContent":["(function() {\n  'use strict';\n\n  /**\n   *\n   *\n   * @mixin MapMarkerMixin\n   */\n  let MapMarkerMixin = (superclass) => class extends superclass {\n    initialize(options={}) {\n      if (super.initialize) super.initialize(options);\n\n      this.lat = options.lat || undefined;\n      this.lng = options.lng || undefined;\n      this.name = options.name || undefined;\n    }\n\n    canAddInst() {\n      return (typeof this.lat === 'number') && (typeof this.lng === 'number');\n    }\n\n    createInst(options) {\n      return L.marker(options.geometry, options.config);\n    }\n\n    updateInst(lastOptions, nextOptions) {\n      if (lastOptions.geometry !== nextOptions.geometry) {\n        this.elementInst.setLatLng(nextOptions.geometry);\n      }\n      if (lastOptions.config.icon !== nextOptions.config.icon) {\n        this.elementInst.setIcon(nextOptions.config.icon);\n      }\n    }\n\n    getOptions() {\n      const geometry = this.getLatLng();\n\n      const config = {};\n      config.title = (this.name || '');\n      config.icon = this.getIcon();\n\n      return { geometry, config };\n    }\n\n    getLatLng() {\n      if (!this.lat || !this.lng) return [];\n      return L.latLng(this.lat, this.lng);\n    }\n\n    // Should be implemented by behaviors that extend MarkerBase\n\n    getIcon() {\n      throw new Error('The `getIcon` method must be implemented.');\n    }\n  };\n\n  const mixins = (window.PxMapMixin = window.PxMapMixin || {});\n  mixins.MapMarker = MapMarkerMixin;\n\n  class MapMarker extends mixwith.mix(PxMap.Base).with(PxMapMixin.MapElement, PxMapMixin.MapLayer, PxMapMixin.MapMarker) {\n    constructor() {\n      super(...arguments);\n      this.initialize();\n    }\n  }\n\n  const klasses = (window.PxMap = window.PxMap || {});\n  klasses.MapMarker = MapMarker;\n})();\n"]}