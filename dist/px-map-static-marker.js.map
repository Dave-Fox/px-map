{"version":3,"sources":["px-map-static-marker.es6.js"],"names":["PxMapStaticMarker","window","requestAnimationFrame","_drawMarker","bind","markerInstance","marker","_createMarker","_setMarkerInstance","_attachMarkerToMap","layerInstance","hasLayer","addTo","geometry","lat","lon","icon","_createStaticMarkerIcon","L","_captureMarkerEvents","options","className","html","popupAnchor","point","divIcon","on","evt","fire","type","PxMapBehaviors","DistributeProperties","Number","notify","Object","readOnly","mapInstance","Polymer"],"mappings":"wpBAAA,CAAC,UAAU,CACT,aADS,GAGHA,kBAHG,0JA6EI,CACTC,OAAOC,qBAAP,CAA6B,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAA7B,CACD,CA/EM,iDAoFO,CACZ,GAAI,CAAC,KAAKC,cAAV,CAA0B,CACxB,GAAIC,QAAS,KAAKC,aAAL,EAAb,CACA,KAAKC,kBAAL,CAAwBF,MAAxB,CACD,CACD,KAAKG,kBAAL,EACD,CA1FM,+DAiGc,CACnB,GAAI,KAAKJ,cAAL,EAAuB,KAAKK,aAA5B,EAA6C,KAAKA,aAAL,CAAmBC,QAAhE,EAA4E,CAAC,KAAKD,aAAL,CAAmBC,QAAnB,CAA4B,KAAKN,cAAjC,CAAjF,CAAmI,CACjI,KAAKA,cAAL,CAAoBO,KAApB,CAA0B,KAAKF,aAA/B,CACD,CAFD,IAGK,CACHT,OAAOC,qBAAP,CAA6B,KAAKO,kBAAL,CAAwBL,IAAxB,CAA6B,IAA7B,CAA7B,CACD,CACF,CAxGM,qDA8GS,CAEd,GAAMS,UAAW,CAAC,KAAKC,GAAN,CAAW,KAAKC,GAAhB,CAAjB,CACA,GAAMC,MAAO,KAAKC,uBAAL,EAAb,CACA,GAAMX,QAASY,EAAEZ,MAAF,CAASO,QAAT,CAAmB,CAAEG,KAAMA,IAAR,CAAnB,CAAf,CAGA,KAAKG,oBAAL,CAA0Bb,MAA1B,EAGA,MAAOA,OACR,CAzHM,yEA8HmB,CACxB,GAAMc,SAAU,EAAhB,CAIAA,QAAQC,SAAR,CAAoB,oCAApB,CAGAD,QAAQE,IAAR,2MAMAF,QAAQG,WAAR,CAAsBL,EAAEM,KAAF,CAAQ,CAAR,CAAU,CAAC,EAAX,CAAtB,CAEA,MAAON,GAAEO,OAAF,CAAUL,OAAV,CACR,CA/IM,kEAuJcd,MAvJd,CAuJsB,gBAC3BA,OAAOoB,EAAP,CAAU,KAAV,CAAiB,SAACC,GAAD,CAAS,CACxB,MAAKC,IAAL,kBAA2BD,IAAIE,IAA/B,CAAuCF,GAAvC,CACD,CAFD,CAEG,IAFH,CAGD,CA3JM,8BAKE,CAAE,MAAO,sBAAyB,CALpC,qCAQS,CAAE,MAAO,CAAC1B,OAAO6B,cAAP,CAAsBC,oBAAvB,CAA+C,CARjE,yCAWa,CAAE,MAAO,CAAC,gBAAD,CAAqB,CAX3C,sCAcU,CACf,MAAO,CAQLjB,IAAK,CACHe,KAAMG,MADH,CAEHC,OAAQ,IAFL,CARA,CAoBLlB,IAAK,CACHc,KAAMG,MADH,CAEHC,OAAQ,IAFL,CApBA,CA+BL5B,eAAgB,CACdwB,KAAMK,MADQ,CAEdD,OAAQ,IAFM,CAGdE,SAAU,IAHI,CA/BX,CA4CLzB,cAAe,CACbmB,KAAMK,MADO,CAEbD,OAAQ,IAFK,CA5CV,CAuDLG,YAAa,CACXP,KAAMK,MADK,CAEXD,OAAQ,IAFG,CAvDR,CA4DR,CA3EM,gCAgKTI,QAAQrC,iBAAR,CACD,CAjKD","file":"px-map-static-marker.js","sourcesContent":["(function(){\n  'use strict';\n\n  class PxMapStaticMarker {\n    /* Name for the component */\n    get is() { return 'px-map-static-marker'; }\n\n    /* Behaviors to import for this component */\n    get behaviors() { return [window.PxMapBehaviors.DistributeProperties]; }\n\n    /* Properties to attach to distributed light DOM children */\n    get distributions() { return ['markerInstance']; }\n\n    /* Properties for this component */\n    get properties() {\n      return {\n        /**\n         * The latitude of the marker. Set a value to draw the maker at a default\n         * latitude. Listen for updates if the marker is draggable or\n         * created dynamically by the user.\n         *\n         * @type {Number}\n         */\n        lat: {\n          type: Number,\n          notify: true\n        },\n\n        /**\n        * The longitude of the marker. Set a value to draw the maker at a default\n        * longitude. Listen for updates if the marker is draggable or\n        * created dynamically by the user.\n         *\n         * @type {Number}\n         */\n        lon: {\n          type: Number,\n          notify: true\n        },\n\n        /**\n         * The marker instance created by this component and attached to a layer.\n         * Used to show a point on the map.\n         *\n         * @type {Object}\n         */\n        markerInstance: {\n          type: Object,\n          notify: true,\n          readOnly: true\n        },\n\n        /**\n         * A reference to the layer instance passed down from the parent\n         * `px-map-overlay-layer` this marker belongs to. Used by the component\n         * to draw itself on the layer.\n         *\n         * @type {Object}\n         */\n        layerInstance: {\n          type: Object,\n          notify: true\n        },\n\n        /**\n         * A reference to the active map instance passed down from `px-map`.\n         * Used by this component to draw itself on the map.\n         *\n         * @type {Object}\n         */\n        mapInstance: {\n          type: Object,\n          notify: true\n        }\n      }\n    }\n\n    attached() {\n      window.requestAnimationFrame(this._drawMarker.bind(this));\n    }\n\n    /**\n     * Attempts to create the marker so it can be attached to a layer.\n     */\n    _drawMarker() {\n      if (!this.markerInstance) {\n        let marker = this._createMarker();\n        this._setMarkerInstance(marker);\n      }\n      this._attachMarkerToMap();\n    }\n\n    /**\n     * If a layer has been applied to this marker, attach the marker to the layer\n     * so it can be drawn on the map. If no layer instance is ready, throws the\n     * task back into the stack to attach to the layer once it's ready.\n     */\n    _attachMarkerToMap() {\n      if (this.markerInstance && this.layerInstance && this.layerInstance.hasLayer && !this.layerInstance.hasLayer(this.markerInstance)) {\n        this.markerInstance.addTo(this.layerInstance);\n      }\n      else {\n        window.requestAnimationFrame(this._attachMarkerToMap.bind(this));\n      }\n    }\n\n    /**\n     * Creates a marker from this marker's current properties and returns\n     * the new instance.\n     */\n    _createMarker() {\n      // Create the marker instance\n      const geometry = [this.lat, this.lon];\n      const icon = this._createStaticMarkerIcon();\n      const marker = L.marker(geometry, { icon: icon });\n\n      // Attach event handlers to the marker\n      this._captureMarkerEvents(marker);\n\n      // Return the marker instance to be attached\n      return marker;\n    }\n\n    /**\n     * Creates and configures a styled icon that can be attached to a marker.\n     */\n    _createStaticMarkerIcon() {\n      const options = {};\n\n      // To get shady DOM CSS styling, we need to hack `style-scope px-map`\n      // onto the className to have styles applied\n      options.className = 'static-map-icon style-scope px-map';\n\n      // HTML that we style with CSS to 'draw' the marker\n      options.html = `\n      <i class=\"static-map-icon__body style-scope px-map\"></i>\n      <i class=\"static-map-icon__marker style-scope px-map\"></i>\n      <i class=\"static-map-icon__descender style-scope px-map\"></i>`\n\n      // Anchor the popup open position\n      options.popupAnchor = L.point(1,-38);\n\n      return L.divIcon(options);\n    }\n\n    /**\n     * Configures handler functions to capture, react to, or forward events\n     * from a marker instance.\n     *\n     * @param {Object} marker\n     */\n    _captureMarkerEvents(marker) {\n      marker.on('add', (evt) => {\n        this.fire(`px-map-marker-${evt.type}`, evt);\n      }, this);\n    }\n\n  }\n\n  /* Register this element with the Polymer constructor. */\n  Polymer(PxMapStaticMarker);\n})()\n"]}