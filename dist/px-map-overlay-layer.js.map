{"version":3,"sources":["px-map-overlay-layer.es6.js"],"names":["PxMapOverlayLayer","L","layerGroup","parentInstance","window","PxMapBehavior","DistributeProperties","Layer","name","type","String","notify","Object","observer","Polymer"],"mappings":"wpBAAA,CAAC,UAAU,CACT,aADS,GAGHA,kBAHG,kKA8CQ,CACb,MAAOC,GAAEC,UAAF,EACR,CAhDM,mDAkDQ,CACb,GAAI,KAAKC,cAAT,CAAyB,CACvB,MAAO,MAAKA,cACb,CACF,CAtDM,8BAKE,CAAE,MAAO,sBAAyB,CALpC,qCAQS,CACd,MAAO,CACLC,OAAOC,aAAP,CAAqBC,oBADhB,CAELF,OAAOC,aAAP,CAAqBE,KAFhB,CAIR,CAbM,yCAgBa,CAAE,MAAO,CAAC,iCAAD,CAAsC,CAhB5D,sCAmBU,CACf,MAAO,CAQLC,KAAM,CACJC,KAAMC,MADF,CAEJC,OAAQ,IAFJ,CARD,CAmBLR,eAAgB,CACdM,KAAMG,MADQ,CAEdD,OAAQ,IAFM,CAGdE,SAAU,qBAHI,CAnBX,CAyBR,CA7CM,gCA2DTC,QAAQd,iBAAR,CACD,CA5DD","file":"px-map-overlay-layer.js","sourcesContent":["(function(){\n  'use strict';\n\n  class PxMapOverlayLayer {\n    /* Name for the component */\n    get is() { return 'px-map-overlay-layer'; }\n\n    /* Behaviors to import for this component */\n    get behaviors() {\n      return [\n        window.PxMapBehavior.DistributeProperties,\n        window.PxMapBehavior.Layer\n      ];\n    }\n\n    /* Properties to attach to distributed light DOM children */\n    get distributions() { return ['layerInstance as parentInstance']; }\n\n    /* Properties for this component */\n    get properties() {\n      return {\n        /**\n         * A human-readable name for the overlay layer. If the map is configured\n         * with controls that allow the user to show/hide layers, this name\n         * will be used a menu item the user can interact with to set its visibility.\n         *\n         * @type {String}\n         */\n        name: {\n          type: String,\n          notify: true\n        },\n\n        /**\n         * A reference to the parent instance that this component will attach\n         * to when drawn on the map.\n         *\n         * @type {Object}\n         */\n        parentInstance: {\n          type: Object,\n          notify: true,\n          observer: 'ensureLayerAttached'\n        }\n      }\n    }\n    _createLayer() {\n      return L.layerGroup();\n    }\n\n    _attachLayer() {\n      if (this.parentInstance) {\n        return this.parentInstance;\n      }\n    }\n\n  }\n\n  /* Register this component with the Polymer constructor. */\n  Polymer(PxMapOverlayLayer);\n})();\n\n// (function(){\n//   'use strict';\n//\n//   class PxMapOverlayLayer {\n//     /* Name for the component */\n//     get is() { return 'px-map-overlay-layer'; }\n//\n//     /* Behaviors to import for this component */\n//     // get behaviors() { return [window.PxMapBehavior.DistributeProperties]; }\n//     get behaviors() { return [window.PxMapBehavior.DistributeProperties]; }\n//\n//     /* Properties to attach to distributed light DOM children */\n//     get distributions() { return ['layerInstance']; }\n//\n//     /* Properties for this component */\n//     get properties() {\n//       return {\n//         /**\n//          * A human-readable name for the overlay layer. If the map is configured\n//          * with controls that allow the user to show/hide layers, this name\n//          * will be used a menu item the user can interact with to set its visibility.\n//          *\n//          * @type {String}\n//          */\n//         name: {\n//           type: String,\n//           notify: true\n//         },\n//\n//         /**\n//          * The layer instance created by this component and attached to the active\n//          * map. Used to collect different UI components (e.g. markers, polygons)\n//          * into a group to manipulate them together.\n//          *\n//          * @type {Object}\n//          */\n//         layerInstance: {\n//           type: Object,\n//           notify: true,\n//           readOnly: true\n//         },\n//\n//\n//         /**\n//          * A reference to the active map instance passed down from `px-map`.\n//          * Used by this component to draw itself on the map.\n//          *\n//          * @type {Object}\n//          */\n//         mapInstance: {\n//           type: Object,\n//           notify: true\n//         }\n//       }\n//     }\n//\n//     attached() {\n//       window.requestAnimationFrame(this._drawLayer.bind(this));\n//     }\n//\n//     /**\n//      * Attempts to create the layer so it can be attached to the map.\n//      */\n//     _drawLayer() {\n//       if (!this.layerInstance) {\n//         this._setLayerInstance(L.layerGroup());\n//       }\n//       this._attachLayerToMap();\n//     }\n//\n//     /**\n//      * If a map instance has been applied to this layer, attach the layer\n//      * to the map. If no map instance is ready, throws the task back into the\n//      * stack to attach to the map once it's ready.\n//      */\n//     _attachLayerToMap() {\n//       if (this.layerInstance && this.mapInstance && this.mapInstance.hasLayer && !this.mapInstance.hasLayer(this.layerInstance)) {\n//         this.layerInstance.addTo(this.mapInstance);\n//       }\n//       else {\n//         window.requestAnimationFrame(this._attachLayerToMap.bind(this));\n//       }\n//     }\n//\n//   }\n//\n//   /* Register this component with the Polymer constructor. */\n//   Polymer(PxMapOverlayLayer);\n// })()\n"]}