{"version":3,"sources":["px-map-overlay-layer.es6.js"],"names":["PxMapOverlayLayer","window","requestAnimationFrame","_drawLayer","bind","layerInstance","_setLayerInstance","L","layerGroup","_attachLayerToMap","mapInstance","hasLayer","addTo","PxMapBehaviors","DistributeProperties","name","type","String","notify","Object","readOnly","Polymer"],"mappings":"wpBAAA,CAAC,UAAU,CACT,aADS,GAGHA,kBAHG,0JAsDI,CACTC,OAAOC,qBAAP,CAA6B,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAA7B,CACD,CAxDM,+CA6DM,CACX,GAAI,CAAC,KAAKC,aAAV,CAAyB,CACvB,KAAKC,iBAAL,CAAuBC,EAAEC,UAAF,EAAvB,CACD,CACD,KAAKC,iBAAL,EACD,CAlEM,6DAyEa,CAClB,GAAI,KAAKJ,aAAL,EAAsB,KAAKK,WAA3B,EAA0C,KAAKA,WAAL,CAAiBC,QAA3D,EAAuE,CAAC,KAAKD,WAAL,CAAiBC,QAAjB,CAA0B,KAAKN,aAA/B,CAA5E,CAA2H,CACzH,KAAKA,aAAL,CAAmBO,KAAnB,CAAyB,KAAKF,WAA9B,CACD,CAFD,IAGK,CACHT,OAAOC,qBAAP,CAA6B,KAAKO,iBAAL,CAAuBL,IAAvB,CAA4B,IAA5B,CAA7B,CACD,CACF,CAhFM,8BAKE,CAAE,MAAO,sBAAyB,CALpC,qCAQS,CAAE,MAAO,CAACH,OAAOY,cAAP,CAAsBC,oBAAvB,CAA+C,CARjE,yCAWa,CAAE,MAAO,CAAC,aAAD,CAAgB,eAAhB,CAAmC,CAXzD,sCAcU,CACf,MAAO,CAQLC,KAAM,CACJC,KAAMC,MADF,CAEJC,OAAQ,IAFJ,CARD,CAoBLb,cAAe,CACbW,KAAMG,MADO,CAEbD,OAAQ,IAFK,CAGbE,SAAU,IAHG,CApBV,CAgCLV,YAAa,CACXM,KAAMG,MADK,CAEXD,OAAQ,IAFG,CAhCR,CAqCR,CApDM,gCAqFTG,QAAQrB,iBAAR,CACD,CAtFD","file":"px-map-overlay-layer.js","sourcesContent":["(function(){\n  'use strict';\n\n  class PxMapOverlayLayer {\n    /* Name for the component */\n    get is() { return 'px-map-overlay-layer'; }\n\n    /* Behaviors to import for this component */\n    get behaviors() { return [window.PxMapBehaviors.DistributeProperties]; }\n\n    /* Properties to attach to distributed light DOM children */\n    get distributions() { return ['mapInstance', 'layerInstance']; }\n\n    /* Properties for this component */\n    get properties() {\n      return {\n        /**\n         * A human-readable name for the overlay layer. If the map is configured\n         * with controls that allow the user to show/hide layers, this name\n         * will be used a menu item the user can interact with to set its visibility.\n         *\n         * @type {String}\n         */\n        name: {\n          type: String,\n          notify: true\n        },\n\n        /**\n         * The layer instance created by this component and attached to the active\n         * map. Used to collect different UI components (e.g. markers, polygons)\n         * into a group to manipulate them together.\n         *\n         * @type {Object}\n         */\n        layerInstance: {\n          type: Object,\n          notify: true,\n          readOnly: true\n        },\n\n        /**\n         * A reference to the active map instance passed down from `px-map`.\n         * Used by this component to draw itself on the map.\n         *\n         * @type {Object}\n         */\n        mapInstance: {\n          type: Object,\n          notify: true\n        }\n      }\n    }\n\n    attached() {\n      window.requestAnimationFrame(this._drawLayer.bind(this));\n    }\n\n    /**\n     * Attempts to create the layer so it can be attached to the map.\n     */\n    _drawLayer() {\n      if (!this.layerInstance) {\n        this._setLayerInstance(L.layerGroup());\n      }\n      this._attachLayerToMap();\n    }\n\n    /**\n     * If a map instance has been applied to this layer, attach the layer\n     * to the map. If no map instance is ready, throws the task back into the\n     * stack to attach to the map once it's ready.\n     */\n    _attachLayerToMap() {\n      if (this.layerInstance && this.mapInstance && this.mapInstance.hasLayer && !this.mapInstance.hasLayer(this.layerInstance)) {\n        this.layerInstance.addTo(this.mapInstance);\n      }\n      else {\n        window.requestAnimationFrame(this._attachLayerToMap.bind(this));\n      }\n    }\n\n  }\n\n  /* Register this element with the Polymer constructor. */\n  Polymer(PxMapOverlayLayer);\n})()\n"]}