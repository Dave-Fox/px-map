{"version":3,"sources":["px-map-behavior-element.es6.js"],"names":["namespace","window","PxMapBehavior","ElementImpl","beforeRegister","elementInst","shouldAddInst","parent","options","__initialOptions","getInstOptions","createInst","fire","__instEvents","__instEventsElementsMap","WeakMap","hasLayer","addInst","shouldRemoveInst","unbindAllEvents","removeInst","undefined","shouldUpdateInst","__elAttached","canAddInst","notifyInstReady","lastOptions","__lastOptions","nextOptions","updateInst","Error","extendObj","obj","Object","properties","length","assign","addProperties","extend","bindEvents","evts","target","keys","el","on","boundEvts","boundEvtEls","evtName","evtReference","name","fn","push","set","evt","get","off","delete","Element"],"mappings":"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","file":"px-map-behavior-element.js","sourcesContent":["(function() {\n  'use strict';\n\n  /****************************************************************************\n   * BEHAVIORS\n   ****************************************************************************/\n\n  /* Ensures the behavior namespace is created */\n  const namespace = (window.PxMapBehavior = window.PxMapBehavior || {});\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.Element\n   */\n  const ElementImpl = {\n    beforeRegister() {\n      /**\n       * A reference to this element's instance. The instance can be configured and\n       * attached to the map or to another instance. Events emitted by this instance\n       * will be intercepted and retargeted so they appear to come from directly from\n       * this custom element.\n       *\n       * @property elementInst\n       * @type {Object|null}\n       */\n      this.elementInst = null;\n    },\n\n    shouldAddInst(parent) {\n      // Create the instance, if it doesn't already exist\n      if (!this.elementInst) {\n        const options = this.__initialOptions = this.getInstOptions();\n        this.elementInst = this.createInst(options);\n        this.fire('px-map-layer-instance-created');\n      }\n\n      // @TODO: Bind events\n      this.__instEvents = (this.__instEvents || []);\n      this.__instEventsElementsMap = (this.__instEventsElementsMap || new WeakMap());\n\n      // Add the instance to its parent\n      if (this.elementInst && parent || !parent.hasLayer(this.elementInst)) {\n        this.addInst(parent);\n      };\n    },\n\n    shouldRemoveInst(parent) {\n      // @TODO: Unbind events\n      this.unbindAllEvents(this.__instEvents, this.__instEventsElementsMap);\n      this.__instEvents = null;\n      this.__instEventsElementsMap = null;\n\n      if (this.elementInst) {\n        this.removeInst(parent ? parent : undefined);\n      };\n    },\n\n    // Simple observer trigger for dynamic properties that should be synced\n    // to the instance\n\n    shouldUpdateInst() {\n      if (!this.elementInst && this.__elAttached && this.canAddInst()) {\n        this.notifyInstReady(this.canAddInst());\n      }\n      if (!this.elementInst) return;\n\n      const lastOptions = this.__lastOptions || this.__initialOptions;\n      const nextOptions = this.getInstOptions();\n\n      this.updateInst(lastOptions, nextOptions);\n\n      // Set `lastOptions` to `nextOptions` so the next time this method is called\n      // it will have access to the last options\n      this.__lastOptions = nextOptions;\n    },\n\n    // Should be implemented by behaviors/components that extend...\n\n    createInst() {\n      throw new Error('The `createInst` method must be implemented.')\n    },\n\n    updateInst() {\n      throw new Error('The `updateInst` method must be implemented.')\n    },\n\n    getInstOptions() {\n      throw new Error('The `getInstOptions` method must be implemented.')\n    },\n\n    addInst() {\n      throw new Error('The `bindInst` method must be implemented.')\n    },\n\n    removeInst() {\n      throw new Error('The `unbindInst` method must be implemented.')\n    },\n\n    // Helper methods\n\n    extendObj(obj, ...properties) {\n      if (!obj || !(obj instanceof Object)) throw new Error('The first parameter of `extendObj` must be an object to be mutated.');\n      if (properties.length) {\n        Object.assign(obj, ...properties);\n      }\n      return obj;\n    },\n\n    addProperties(...properties) {\n      this.properties = this.properties || {};\n      if (properties.length) {\n        this.extend(this.properties, ...properties)\n      }\n      return this.properties;\n    },\n\n    bindEvents(evts, target) {\n      if ((typeof evts !== 'object') || !Object.keys(evts).length) return;\n\n      const el = target || this.elementInst;\n      if (!el || !el.on) return;\n\n      const boundEvts = this.__instEvents;\n      const boundEvtEls = this.__instEventsElementsMap;\n\n      for (let evtName in evts) {\n        let evtReference = {name: evtName, fn: evts[evtName]};\n        el.on(evtReference.name, evtReference.fn);\n        boundEvts.push(evtReference);\n        boundEvtEls.set(evtReference, el);\n      }\n    },\n\n    unbindAllEvents(boundEvts, boundEvtEls) {\n      if (!boundEvts || !boundEvts.length || !boundEvtEls) return;\n\n      for (let evt of boundEvts) {\n        let el = boundEvtEls.get(evt);\n        if (!el || !el.off) continue;\n\n        let {name, fn} = evt;\n        el.off(name, fn);\n\n        boundEvtEls.delete(evt);\n      }\n    }\n  };\n  /* Bind Element behavior */\n  namespace.Element = [ElementImpl];\n\n})();\n"]}