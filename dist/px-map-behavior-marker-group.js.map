{"version":3,"sources":["px-map-behavior-marker-group.es6.js"],"names":["MarkerGroupImpl","properties","name","type","String","notify","data","Object","observer","listeners","categoryById","categoryByName","createInst","_markers","Map","PruneClusterForLeaflet","updateInst","lastOptions","nextOptions","features","length","_updateMarkers","fire","getOptions","Array","feature","has","marker","_createMarker","elementInst","RegisterMarker","set","PruneCluster","Marker","geometry","coordinates","icon","getIcon","bind","category","createStaticIcon","getIconOptions","getStaticIconOptions","namespace","window","PxMapBehavior","MarkerGroup","LayerBase","Common","StaticIconMethods"],"mappings":"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","file":"px-map-behavior-marker-group.js","sourcesContent":["(function() {\n  'use strict';\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.MarkerGroup\n   */\n  const MarkerGroupImpl = {\n    properties: {\n      /**\n       * A human-readable name for this layer group. If the map has a layer\n       * control panel, the user will click this name to show, hide, or\n       * manipulate this layer.\n       *\n       * @type {String}\n       */\n      name: {\n        type: String,\n        notify: true\n      },\n\n      /**\n       * A GeoJSON FeatureCollection object containing an array of Features with\n       * point data that will be represented as a marker.\n       *\n       * @type {Object}\n       */\n      data: {\n        type: Object,\n        observer: 'shouldUpdateInst'\n      }\n    },\n\n    listeners: {\n      'px-map-layer-instance-created' : 'shouldUpdateInst'\n    },\n\n    categoryById: {\n      0 : 'unknown',\n      1 : 'info',\n      2 : 'warning',\n      3 : 'important'\n    },\n\n    categoryByName: {\n      'unknown'   : 0,\n      'info'      : 1,\n      'warning'   : 2,\n      'important' : 3\n    },\n\n    createInst() {\n      this._markers = this._markers || new Map();\n      return new PruneClusterForLeaflet();\n    },\n\n    updateInst(lastOptions, nextOptions) {\n      if (nextOptions.data && nextOptions.data.features && nextOptions.data.features.length) {\n        this._updateMarkers(nextOptions.data.features);\n        this.fire('px-map-marker-add');\n      }\n    },\n\n    getOptions() {\n      return {\n        data: this.data || {}\n      };\n    },\n\n    _updateMarkers(features) {\n      if (!features || !(features instanceof Array) || !features.length) return;\n\n      for (let feature of features) {\n        if (this._markers.has(feature)) continue;\n\n        // feature.geometry.coordinates is [lng,lat] and marker wants lat,lng\n        let marker = this._createMarker(feature);\n        this.elementInst.RegisterMarker(marker);\n        this._markers.set(feature, marker);\n      }\n    },\n\n    _createMarker(feature) {\n      let marker = new PruneCluster.Marker(feature.geometry.coordinates[1], feature.geometry.coordinates[0]);\n\n      // Bind marker icon creation to `this`\n      marker.data.icon = this.getIcon.bind(this);\n\n      // Sets the category ID, from a lookup table\n      if (feature.properties['marker-icon'] && feature.properties['marker-icon']['icon-status'] && this.categoryByName[feature.properties['marker-icon']['icon-status']]) {\n        marker.category = this.categoryByName[feature.properties['marker-icon']['icon-status']];\n      }\n\n      return marker;\n    },\n\n    getIcon(data, category) {\n      return this.createStaticIcon(this.getIconOptions(category));\n    },\n\n    getIconOptions(category) {\n      return this.getStaticIconOptions({ type: this.categoryById[category] });\n    }\n  };\n\n  const namespace = (window.PxMapBehavior = window.PxMapBehavior || {});\n  namespace.MarkerGroup = [\n    namespace.LayerBase,\n    namespace.Common.StaticIconMethods,\n    MarkerGroupImpl\n  ];\n})()\n"]}