{"version":3,"sources":["px-map-behavior-icon.es6.js"],"names":["IconStatic","options","icon","createIcon","type","badge","className","_generateStaticIconClasses","html","iconSize","L","point","iconAnchor","popupAnchor","divIcon","classes","length","push","join","klass","window","PxMap"],"mappings":"wpBAAA,CAAC,UAAW,CACV,aADU,GAOJA,WAPI,YAQR,qBAAwB,IAAZC,QAAY,2DAAJ,EAAI,kCACtB,KAAKC,IAAL,CAAY,KAAKC,UAAL,CAAgBF,OAAhB,CAAZ,CACA,MAAO,MAAKC,IACb,CAXO,sEAae,IAAZD,QAAY,2DAAJ,EAAI,mBAEcA,OAFd,CAEfG,IAFe,CAEfA,IAFe,2BAEV,MAFU,8BAEcH,OAFd,CAEFI,KAFE,CAEFA,KAFE,4BAEI,KAFJ,gBAGrBJ,QAAQK,SAAR,CAAoB,KAAKC,0BAAL,CAAgCH,IAAhC,CAAsCC,KAAtC,CAApB,CAGAJ,QAAQO,IAAR,+JAKAP,QAAQQ,QAAR,CAAmBC,EAAEC,KAAF,CAAQ,EAAR,CAAW,EAAX,CAAnB,CACAV,QAAQW,UAAR,CAAqBF,EAAEC,KAAF,CAAQ,IAAR,CAAc,IAAd,CAArB,CACAV,QAAQY,WAAR,CAAsBH,EAAEC,KAAF,CAAQ,CAAR,CAAU,CAAC,EAAX,CAAtB,CAEA,MAAOD,GAAEI,OAAF,CAAUb,OAAV,CACR,CA7BO,8EA+BmBG,IA/BnB,CA+ByBC,KA/BzB,CA+BgC,CACtC,GAAMU,SAAU,CAAC,UAAD,CAAa,iBAAb,CAAhB,CACA,GAAIX,MAAQA,KAAKY,MAAjB,CAAyB,CACvBD,QAAQE,IAAR,qBAAiCb,IAAjC,CACD,CACD,GAAIC,KAAJ,CAAW,CACTU,QAAQE,IAAR,+BACD,CACD,MAAOF,SAAQG,IAAR,CAAa,GAAb,CACR,CAxCO,yBAyCT,CAGD,GAAMC,OAASC,OAAOC,KAAP,CAAeD,OAAOC,KAAP,EAAgB,EAA9C,CAGAF,MAAMnB,UAAN,CAAmBA,UACpB,CAhDD","file":"px-map-behavior-icon.js","sourcesContent":["(function() {\n  'use strict';\n\n  /**\n   *\n   * @class PxMap.IconStatic\n   */\n  class IconStatic {\n    constructor(options={}) {\n      this.icon = this.createIcon(options);\n      return this.icon;\n    }\n\n    createIcon(options={}) {\n      // Extract `type` and `badge` from options with defaults\n      let { type='info', badge=false } = options;\n      options.className = this._generateStaticIconClasses(type, badge);\n\n      // Static options\n      options.html = `\n        <i class=\"map-icon-static__body\"></i>\n        <i class=\"map-icon-static__descender\"></i>\n        <i class=\"map-icon-static__badge\"></i>\n      `;\n      options.iconSize = L.point(50,50);\n      options.iconAnchor = L.point(9.01, 39.5);\n      options.popupAnchor = L.point(1,-38);\n\n      return L.divIcon(options);\n    }\n\n    _generateStaticIconClasses(type, badge) {\n      const classes = ['map-icon', 'map-icon-static'];\n      if (type && type.length) {\n        classes.push(`map-icon-static--${type}`);\n      }\n      if (badge) {\n        classes.push(`map-icon-static--with-badge`);\n      }\n      return classes.join(' ');\n    }\n  };\n\n  /* Ensures the klass namespace is created */\n  const klass = (window.PxMap = window.PxMap || {});\n\n  /* Bind IconStatic klass */\n  klass.IconStatic = IconStatic;\n})();\n"]}