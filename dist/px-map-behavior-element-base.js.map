{"version":3,"sources":["px-map-behavior-element-base.es6.js"],"names":["MapElementBaseImpl","beforeRegister","elementInst","addInst","parent","options","__initialOptions","getInstOptions","createInst","hasLayer","bindInstToParent","removeInst","unbindInstFromParent","undefined","shouldUpdateInst","__elAttached","canAddInst","notifyInstReady","lastOptions","__lastOptions","nextOptions","getOptions","updateInst","Error","bindInst","unbindInst","extend","source","properties","Object","length","assign","addProperties","namespace","window","PxMapBehavior","MapElement"],"mappings":"aAAA,CAAC,UAAW,CACV,aAMA,GAAMA,oBAAqB,CACzBC,cADyB,0BACR,CAUf,KAAKC,WAAL,CAAmB,IACpB,CAZwB,CAczBC,OAdyB,kBAcjBC,MAdiB,CAcT,CAEd,GAAI,CAAC,KAAKF,WAAV,CAAuB,CACrB,GAAMG,SAAU,KAAKC,gBAAL,CAAwB,KAAKC,cAAL,EAAxC,CACA,KAAKL,WAAL,CAAmB,KAAKM,UAAL,CAAgBH,OAAhB,CACpB,CAGD,GAAI,KAAKH,WAAL,EAAoBE,MAApB,EAA8B,CAACA,OAAOK,QAAP,CAAgB,KAAKP,WAArB,CAAnC,CAAsE,CACpE,KAAKQ,gBAAL,CAAsBN,MAAtB,CACD,EAGF,CA3BwB,CA6BzBO,UA7ByB,qBA6BdP,MA7Bc,CA6BN,CACjB,GAAI,KAAKF,WAAT,CAAsB,CACpB,KAAKU,oBAAL,CAA0BR,OAASA,MAAT,CAAkBS,SAA5C,CACD,EAGF,CAnCwB,CAwCzBC,gBAxCyB,4BAwCN,CACjB,GAAI,CAAC,KAAKZ,WAAN,EAAqB,KAAKa,YAA1B,EAA0C,KAAKC,UAAL,EAA9C,CAAiE,CAC/D,KAAKC,eAAL,CAAqB,KAAKD,UAAL,EAArB,CACD,CACD,GAAI,CAAC,KAAKd,WAAV,CAAuB,OAEvB,GAAMgB,aAAc,KAAKC,aAAL,EAAsB,KAAKb,gBAA/C,CACA,GAAMc,aAAc,KAAKC,UAAL,EAApB,CAEA,KAAKC,UAAL,CAAgBJ,WAAhB,CAA6BE,WAA7B,EAIA,KAAKD,aAAL,CAAqBC,WACtB,CAtDwB,CA0DzBZ,UA1DyB,sBA0DZ,CACX,KAAM,IAAIe,MAAJ,CAAU,8CAAV,CACP,CA5DwB,CA8DzBD,UA9DyB,sBA8DZ,CACX,KAAM,IAAIC,MAAJ,CAAU,8CAAV,CACP,CAhEwB,CAkEzBhB,cAlEyB,0BAkER,CACf,KAAM,IAAIgB,MAAJ,CAAU,8CAAV,CACP,CApEwB,CAsEzBC,QAtEyB,oBAsEd,CACT,KAAM,IAAID,MAAJ,CAAU,4CAAV,CACP,CAxEwB,CA0EzBE,UA1EyB,sBA0EZ,CACX,KAAM,IAAIF,MAAJ,CAAU,8CAAV,CACP,CA5EwB,CAgFzBG,MAhFyB,iBAgFlBC,MAhFkB,CAgFK,+BAAZC,UAAY,iDAAZA,UAAY,yBAC5B,GAAID,QAAWA,iBAAkBE,OAA7B,EAAwCD,WAAWE,MAAvD,CAA+D,CAC7DD,OAAOE,MAAP,eAAcJ,MAAd,SAAyBC,UAAzB,EACD,CACD,MAAOD,OACR,CArFwB,CAuFzBK,aAvFyB,yBAuFI,CAC3B,KAAKJ,UAAL,CAAkB,KAAKA,UAAL,EAAmB,EAArC,CAD2B,+BAAZA,UAAY,2CAAZA,UAAY,yBAE3B,GAAIA,WAAWE,MAAf,CAAuB,CACrB,KAAKJ,MAAL,aAAY,KAAKE,UAAjB,SAAgCA,UAAhC,EACD,CACD,MAAO,MAAKA,UACb,CA7FwB,CAA3B,CAgGA,GAAMK,WAAaC,OAAOC,aAAP,CAAuBD,OAAOC,aAAP,EAAwB,EAAlE,CACAF,UAAUG,UAAV,CAAuB,CAACpC,kBAAD,CACxB,CAzGD","file":"px-map-behavior-element-base.js","sourcesContent":["(function() {\n  'use strict';\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.MapElementBase\n   */\n  const MapElementBaseImpl = {\n    beforeRegister() {\n      /**\n       * A reference to this element's instance. The instance can be configured and\n       * attached to the map or to another instance. Events emitted by this instance\n       * will be intercepted and retargeted so they appear to come from directly from\n       * this custom element.\n       *\n       * @property elementInst\n       * @type {Object|null}\n       */\n      this.elementInst = null;\n    },\n\n    addInst(parent) {\n      // Create the instance, if it doesn't already exist\n      if (!this.elementInst) {\n        const options = this.__initialOptions = this.getInstOptions();\n        this.elementInst = this.createInst(options);\n      }\n\n      // Add the instance to its parent\n      if (this.elementInst && parent || !parent.hasLayer(this.elementInst)) {\n        this.bindInstToParent(parent);\n      };\n\n      // @TODO: Bind events\n    },\n\n    removeInst(parent) {\n      if (this.elementInst) {\n        this.unbindInstFromParent(parent ? parent : undefined);\n      };\n\n      // @TODO: Unbind events\n    },\n\n    // Simple observer trigger for dynamic properties that should be synced\n    // to the instance\n\n    shouldUpdateInst() {\n      if (!this.elementInst && this.__elAttached && this.canAddInst()) {\n        this.notifyInstReady(this.canAddInst());\n      }\n      if (!this.elementInst) return;\n\n      const lastOptions = this.__lastOptions || this.__initialOptions;\n      const nextOptions = this.getOptions();\n\n      this.updateInst(lastOptions, nextOptions);\n\n      // Set `lastOptions` to `nextOptions` so the next time this method is called\n      // it will have access to the last options\n      this.__lastOptions = nextOptions;\n    },\n\n    // Should be implemented by behaviors/components that extend LayerBase\n\n    createInst() {\n      throw new Error('The `createInst` method must be implemented.')\n    },\n\n    updateInst() {\n      throw new Error('The `updateInst` method must be implemented.')\n    },\n\n    getInstOptions() {\n      throw new Error('The `getOptions` method must be implemented.')\n    },\n\n    bindInst() {\n      throw new Error('The `bindInst` method must be implemented.')\n    },\n\n    unbindInst() {\n      throw new Error('The `unbindInst` method must be implemented.')\n    },\n\n    // Helper methods\n\n    extend(source, ...properties) {\n      if (source && (source instanceof Object) && properties.length) {\n        Object.assign(source, ...properties);\n      }\n      return source;\n    },\n\n    addProperties(...properties) {\n      this.properties = this.properties || {};\n      if (properties.length) {\n        this.extend(this.properties, ...properties)\n      }\n      return this.properties;\n    }\n  };\n\n  const namespace = (window.PxMapBehavior = window.PxMapBehavior || {});\n  namespace.MapElement = [MapElementBaseImpl];\n})()\n"]}