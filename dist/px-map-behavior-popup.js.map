{"version":3,"sources":["px-map-behavior-popup.es6.js"],"names":["namespace","window","PxMapBehavior","MapPopupImpl","properties","active","type","Boolean","value","readOnly","bindToControl","String","addInst","parent","getPopup","elementInst","bindPopup","removeInst","unbindPopup","MapPopup","MapLayer","MapPopupInfoImpl","title","observer","description","imgSrc","createInst","options","PxMap","InfoPopup","updateInst","lastOptions","nextOptions","updates","Object","keys","length","updateSettings","getInstOptions","MapPopupInfo","MapPopupDataImpl","data","DataPopup","MapPopupData","klass","settings","config","_createPopup","content","_generatePopupContent","defaultConfig","className","composedConfig","assign","initialize","setContent","tmplFnIf","fn","vals","undefined","call","imgTmpl","titleTmpl","descriptionTmpl","update","L","Popup","maxWidth","minWidth","dataTmpl","dataList","reduce","accum","key","concat","dataItemTmpl","join","label"],"mappings":"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","file":"px-map-behavior-popup.js","sourcesContent":["(function() {\n  'use strict';\n\n  /****************************************************************************\n   * BEHAVIORS\n   ****************************************************************************/\n\n  /* Ensures the behavior namespace is created */\n  const namespace = (window.PxMapBehavior = window.PxMapBehavior || {});\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.MapPopup\n   */\n  const MapPopupImpl = {\n    properties: {\n      /**\n       * Will be `true` when the popup becomes visible, and `false` when the\n       * popup is not visible.\n       */\n      active: {\n        type: Boolean,\n        value: false,\n        readOnly: true\n      },\n\n      /**\n       * The name of a control or another element on the map that will handle\n       * this popup's content. If this attribute is provided, the popup will\n       * not open as box with a pointer over its parent when the parent is\n       * clicked. The popup will fire an event that should be captured above\n       * with its content to place into a control.\n       */\n      bindToControl: {\n        type: String\n      }\n    },\n\n    addInst(parent) {\n      if (parent && parent.getPopup() !== this.elementInst) {\n        parent.bindPopup(this.elementInst);\n      }\n    },\n\n    removeInst(parent) {\n      if (parent && parent.getPopup() === this.elementInst) {\n        parent.unbindPopup(this.elementInst);\n      }\n    }\n  };\n  /* Bind MapPopup behavior */\n  namespace.MapPopup = [\n    namespace.MapLayer,\n    MapPopupImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.MapPopupInfo\n   */\n  const MapPopupInfoImpl = {\n    properties: {\n      /**\n       * Title text to display in bold at the top of the popup. Should be kept\n       * relatively short (25 characters or less) to keep the popup from\n       * growing too large.\n       *\n       * @type {String}\n       */\n      title: {\n        type: String,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * Description text to place in the body of the popup. Try to keep the\n       * description to a reasonable size to keep the popup from growing\n       * too large.\n       *\n       * To display more information, bind to the popup's\n       * `active` property for notifications on when this popup is shown\n       * and display additional information in the UI of your app.\n       *\n       * @type {String}\n       */\n      description: {\n        type: String,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * The URL for an image to place inside the popup. Use a small, square\n       * thumbnail-style image (e.g. 75px by 75px).\n       *\n       * @type {String}\n       */\n      imgSrc: {\n        type: String,\n        observer: 'shouldUpdateInst'\n      }\n    },\n\n    createInst(options) {\n      return new PxMap.InfoPopup(options);\n    },\n\n    updateInst(lastOptions, nextOptions) {\n      let updates = {};\n\n      if (lastOptions.title !== nextOptions.title) {\n        updates.title = nextOptions.title;\n      }\n      if (lastOptions.description !== nextOptions.description) {\n        updates.description = nextOptions.description;\n      }\n      if (lastOptions.imgSrc !== nextOptions.imgSrc) {\n        updates.imgSrc = nextOptions.imgSrc;\n      }\n\n      if (Object.keys(updates).length) {\n        this.elementInst.updateSettings(updates);\n      }\n    },\n\n    getInstOptions() {\n      return {\n        title: this.title,\n        description: this.description,\n        imgSrc: this.imgSrc\n      };\n    }\n  };\n  /* Bind MapPopupInfo behavior */\n  namespace.MapPopupInfo = [\n    namespace.MapPopup,\n    MapPopupInfoImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.MapPopupData\n   */\n  const MapPopupDataImpl = {\n    properties: {\n      /**\n       * Title text to display in bold at the top of the popup. Should be kept\n       * relatively short (25 characters or less) to keep the popup from\n       * growing too large.\n       */\n      title: {\n        type: String,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * A list of key/valye pairs to display in a data table. Must be in the\n       * format of an object with human-readable keys and associated values.\n       *\n       * For example, to show the name and location of a place, set this\n       * attribute to:\n       * '{ \"Name\" : \"Tokyo\", \"Location\" : \"Japan\" }'\n       *\n       * @type {Object}\n       */\n      data: {\n        type: Object,\n        value: function() { return {}; },\n        observer: 'shouldUpdateInst'\n      }\n    },\n\n    createInst(options) {\n      return new PxMap.DataPopup(options);\n    },\n\n    updateInst(lastOptions, nextOptions) {\n      let updates = {};\n\n      if (lastOptions.title !== nextOptions.title) {\n        updates.title = nextOptions.title;\n      }\n      if (lastOptions.data !== nextOptions.data) {\n        updates.data = nextOptions.data;\n      }\n\n      if (Object.keys(updates).length) {\n        this.elementInst.updateSettings(updates);\n      }\n    },\n\n    getInstOptions() {\n      return {\n        title: this.title,\n        data: this.data\n      };\n    }\n  };\n  /* Bind MapPopupData behavior */\n  namespace.MapPopupData = [\n    namespace.MapPopup,\n    MapPopupDataImpl\n  ];\n\n  /****************************************************************************\n   * KLASSES\n   ****************************************************************************/\n\n  /* Ensures the klass namespace is created */\n  const klass = (window.PxMap = window.PxMap || {});\n\n  /**\n   *\n   * @class PxMap.InfoPopup\n   */\n  class InfoPopup extends L.Popup {\n    constructor(settings={}, config={}) {\n      super();\n      this._createPopup(settings, config);\n      return this;\n    }\n\n    // Note `createPopup` is an internet explorer native method, but deprecated\n    // so hopefully it won't cause grief\n    _createPopup(settings={}, config={}) {\n      this.settings = settings;\n      let {title, description, imgSrc} = settings;\n      let content = this._generatePopupContent(title, description, imgSrc);\n\n      let defaultConfig = {\n        className: 'map-popup-info'\n      };\n      let composedConfig = {};\n      Object.assign(composedConfig, defaultConfig, config);\n\n      this.initialize(composedConfig);\n      this.setContent(content);\n    }\n\n    _generatePopupContent(title, description, imgSrc) {\n      let tmplFnIf = (fn, ...vals) =>\n        vals.length && vals[0] !== undefined ? fn.call(this, ...vals) : '';\n\n      let imgTmpl = (imgSrc) => `\n        <div class=\"map-box-info__image\">\n          <img src=\"${imgSrc}\" />\n        </div>\n      `;\n      let titleTmpl = (title) => `\n        <p class=\"map-box-info__title\">${title}</p>\n      `;\n      let descriptionTmpl = (description) => `\n        <p class=\"map-box-info__description\">${description}</p>\n      `;\n\n      return `\n        <section class=\"map-box-info\">\n          ${tmplFnIf(imgTmpl, imgSrc)}\n          <div class=\"map-box-info__content\">\n            ${tmplFnIf(titleTmpl, title)}\n            ${tmplFnIf(descriptionTmpl, description)}\n          </div>\n        </section>\n      `;\n    }\n\n    updateSettings(settings={}) {\n      Object.assign(this.settings, settings);\n      let {title, description, imgSrc} = this.settings;\n      let content = this._generatePopupContent(title, description, imgSrc);\n      this.setContent(content);\n      this.update();\n    }\n  };\n  /* Bind InfoPopup klass */\n  klass.InfoPopup = InfoPopup;\n\n  /**\n   *\n   * @class PxMap.DataPopup\n   */\n  class DataPopup extends L.Popup {\n    constructor(settings={}, config={}) {\n      super();\n      this._createPopup(settings, config);\n      return this;\n    }\n\n    // Note `createPopup` is an internet explorer native method, but deprecated\n    // so hopefully it won't cause grief\n    _createPopup(settings={}, config={}) {\n      this.settings = settings;\n      let {title, data} = this.settings;\n      let content = this._generatePopupContent(title, data);\n\n      let defaultConfig = {\n        className: 'map-popup-data',\n        maxWidth: 400,\n        minWidth: 300\n      };\n      let composedConfig = {};\n      Object.assign(composedConfig, defaultConfig, config);\n\n      this.initialize(composedConfig);\n      this.setContent(content);\n    }\n\n    _generatePopupContent(title, data) {\n      let tmplFnIf = (fn, ...vals) =>\n        vals.length && vals[0] !== undefined ? fn.call(this, ...vals) : '';\n\n      let titleTmpl = (title) => `\n        <div class=\"map-data-box__header\">\n          <h3 class=\"map-data-box__header__text\">${title}</h3>\n        </div>\n      `;\n      let dataTmpl = (data) => {\n        let dataList = Object.keys(data).reduce((accum, key) => {\n          return accum.concat([dataItemTmpl(key, data[key])]);\n        }, []).join('');\n\n        return `\n          <div class=\"map-data-box__table\">\n            ${dataList}\n          </div>\n        `;\n      };\n      let dataItemTmpl = (label, value) => `\n        <div class=\"map-data-box__table__cell\"><p>${label}</p></div>\n        <div class=\"map-data-box__table__cell\"><p>${value}</p></div>\n      `;\n\n      return `\n        <section class=\"map-box-data\">\n          ${tmplFnIf(titleTmpl, title)}\n          ${tmplFnIf(dataTmpl, data)}\n        </section>\n      `;\n    }\n\n    updateSettings(settings={}) {\n      Object.assign(this.settings, settings);\n      let {title, data} = this.settings;\n      let content = this._generatePopupContent(title, data);\n\n      this.setContent(content);\n      this.update();\n    }\n  };\n  /* Bind DataPopup klass */\n  klass.DataPopup = DataPopup;\n\n})()\n"]}